library(car)
##1 Loading Datasets
setwd("C:/Users/Edwin/Documents/R/RRProjects")
fileurl <- "C:/Users/Edwin/Documents/R/RRProjects/activity.csv"
Plt_dat <- read.csv(fileurl, sep = ",", na.strings = "NA", colClasses=c('numeric','Date','numeric'))
Plot_dat <- Plt_dat %>% group_by(date) %>% summarise_each(funs(sum), steps)
##2 Histogram of the number of steps taken each day
png(file = "plot1.png", width = 480, height = 480)
hist(Plot_dat$steps, breaks=10, main = "Total Number of Steps Taken", xlab = "Total Number of Steps Per Day", col = "green")
dev.off()
##3 Mean and median number of steps taken each day
mean(Plot_dat$steps, na.rm=TRUE)
median(Plot_dat$steps, na.rm=TRUE)
##4 Time series plot of the average number of steps taken
Plt_dat$interval <- factor(Plt_dat$interval)
Plot2_dat <- Plt_dat %>% group_by(interval) %>% summarise_each(funs(mean(., na.rm = TRUE)), steps)
png(file = "Plot2.png", width = 480, height = 480)
par(mfrow = c(1,1))
with(Plot2_dat, plot(interval, steps, main = "Average Number of Steps Per Five Minute Interval for All Days", xlab ="5 - Minute Interval", ylab = "Averge Number of Steps", type = "l"))
lines(Plot2_dat$interval, Plot2_dat$steps,col="red", lwd = 3)
dev.off()
##5
MaxAvgSteps <- arrange(Plot2_dat,steps)
tail(MaxAvgSteps$steps,1)
##6 Code to describe and show a strategy for imputing missing data
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(Plt_dat,2,pMiss)
aggr_plot <- aggr(Plt_dat, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(Plt_dat), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
random.imp <- function (a){
missing <- is.na(a)
n.missing <- sum(missing)
a.obs <- a[!missing]
imputed <- a
imputed[missing] <- sample (a.obs, n.missing, replace=TRUE)
return (imputed)
}
Pltsteps <-  data.frame(random.imp(Plt_dat$steps))
Plt_dat1 <- cbind(Plt_dat,Pltsteps)
names(Plt_dat1)[names(Plt_dat1)=="random.imp.Plt_dat.steps."] <- "StepsImputed"
##7 Histogram of the total number of steps taken each day after missing values are imputed
Plot_dat2 <- Plt_dat1 %>% group_by(date) %>% summarise_each(funs(sum), StepsImputed)
png(file = "plot3.png", width = 480, height = 480)
hist(Plot_dat2$StepsImputed, breaks=10, main = "Total Number of Steps Taken After Imputation", xlab = "Total Number of Steps Per Day", col = "lightblue", border = "black")
dev.off()
mean(Plot_dat2$StepsImputed, na.rm=TRUE)
median(Plot_dat2$StepsImputed, na.rm=TRUE)
##8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
Plt_dat1$interval <- factor(Plt_dat1$interval)
Plt_wd <- mutate(Plt_dat1, WeekTime=weekdays(date))
Plt_wd$WeekTime <- recode(Plt_wd$WeekTime, "c('Saturday', 'Sunday')='Weekend'; else='Weekday'")
Plt_wd$WeekTime <- factor(Plt_wd$WeekTime)
Plt_wday <- Plt_wd %>% group_by(interval, WeekTime) %>% summarise_each(funs(mean(., na.rm = TRUE)), StepsImputed)
p <- ggplot(Plt_wday, aes(x = interval, y = StepsImputed, group=WeekTime, colour=WeekTime)) + scale_x_discrete(name="Five Minute Interval", breaks=seq(0,3000,500)) + geom_point() + geom_line()
print(p)
library(plyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(knitr)
library(mice)
library(VIM)
library(car)
##1 Loading Datasets
setwd("C:/Users/Edwin/Documents/R/RRProjects")
fileurl <- "C:/Users/Edwin/Documents/R/RRProjects/activity.csv"
Plt_dat <- read.csv(fileurl, sep = ",", na.strings = "NA", colClasses=c('numeric','Date','numeric'))
Plot_dat <- Plt_dat %>% group_by(date) %>% summarise_each(funs(sum), steps)
##2 Histogram of the number of steps taken each day
png(file = "plot1.png", width = 480, height = 480)
hist(Plot_dat$steps, breaks=10, main = "Total Number of Steps Taken", xlab = "Total Number of Steps Per Day", col = "green")
dev.off()
##3 Mean and median number of steps taken each day
mean(Plot_dat$steps, na.rm=TRUE)
median(Plot_dat$steps, na.rm=TRUE)
##4 Time series plot of the average number of steps taken
Plt_dat$interval <- factor(Plt_dat$interval)
Plot2_dat <- Plt_dat %>% group_by(interval) %>% summarise_each(funs(mean(., na.rm = TRUE)), steps)
png(file = "Plot2.png", width = 480, height = 480)
par(mfrow = c(1,1))
with(Plot2_dat, plot(interval, steps, main = "Average Number of Steps Per Five Minute Interval for All Days", xlab ="5 - Minute Interval", ylab = "Averge Number of Steps", type = "l"))
lines(Plot2_dat$interval, Plot2_dat$steps,col="red", lwd = 3)
dev.off()
##5
MaxAvgSteps <- arrange(Plot2_dat,steps)
tail(MaxAvgSteps$steps,1)
##6 Code to describe and show a strategy for imputing missing data
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(Plt_dat,2,pMiss)
aggr_plot <- aggr(Plt_dat, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(Plt_dat), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
random.imp <- function (a){
missing <- is.na(a)
n.missing <- sum(missing)
a.obs <- a[!missing]
imputed <- a
imputed[missing] <- sample (a.obs, n.missing, replace=TRUE)
return (imputed)
}
Pltsteps <-  data.frame(random.imp(Plt_dat$steps))
Plt_dat1 <- cbind(Plt_dat,Pltsteps)
names(Plt_dat1)[names(Plt_dat1)=="random.imp.Plt_dat.steps."] <- "StepsImputed"
##7 Histogram of the total number of steps taken each day after missing values are imputed
Plot_dat2 <- Plt_dat1 %>% group_by(date) %>% summarise_each(funs(sum), StepsImputed)
png(file = "plot3.png", width = 480, height = 480)
hist(Plot_dat2$StepsImputed, breaks=10, main = "Total Number of Steps Taken After Imputation", xlab = "Total Number of Steps Per Day", col = "lightblue", border = "black")
dev.off()
mean(Plot_dat2$StepsImputed, na.rm=TRUE)
median(Plot_dat2$StepsImputed, na.rm=TRUE)
##8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
Plt_dat1$interval <- factor(Plt_dat1$interval)
Plt_wd <- mutate(Plt_dat1, WeekTime=weekdays(date))
Plt_wd$WeekTime <- recode(Plt_wd$WeekTime, "c('Saturday', 'Sunday')='Weekend'; else='Weekday'")
Plt_wd$WeekTime <- factor(Plt_wd$WeekTime)
Plt_wday <- Plt_wd %>% group_by(interval, WeekTime) %>% summarise_each(funs(mean(., na.rm = TRUE)), StepsImputed)
p <- ggplot(Plt_wday, aes(x = interval, y = StepsImputed, group=WeekTime, colour=WeekTime)) + scale_x_discrete(name="Five Minute Interval", breaks=seq(0,3000,500)) + geom_point() + geom_line() + facet_wrap(~ WeekTime)
print(p)
library(plyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(knitr)
library(mice)
library(VIM)
library(car)
##1 Loading Datasets
setwd("C:/Users/Edwin/Documents/R/RRProjects")
fileurl <- "C:/Users/Edwin/Documents/R/RRProjects/activity.csv"
Plt_dat <- read.csv(fileurl, sep = ",", na.strings = "NA", colClasses=c('numeric','Date','numeric'))
Plot_dat <- Plt_dat %>% group_by(date) %>% summarise_each(funs(sum), steps)
##2 Histogram of the number of steps taken each day
png(file = "plot1.png", width = 480, height = 480)
hist(Plot_dat$steps, breaks=10, main = "Total Number of Steps Taken", xlab = "Total Number of Steps Per Day", col = "green")
dev.off()
##3 Mean and median number of steps taken each day
mean(Plot_dat$steps, na.rm=TRUE)
median(Plot_dat$steps, na.rm=TRUE)
##4 Time series plot of the average number of steps taken
Plt_dat$interval <- factor(Plt_dat$interval)
Plot2_dat <- Plt_dat %>% group_by(interval) %>% summarise_each(funs(mean(., na.rm = TRUE)), steps)
png(file = "Plot2.png", width = 480, height = 480)
par(mfrow = c(1,1))
with(Plot2_dat, plot(interval, steps, main = "Average Number of Steps Per Five Minute Interval for All Days", xlab ="5 - Minute Interval", ylab = "Averge Number of Steps", type = "l"))
lines(Plot2_dat$interval, Plot2_dat$steps,col="red", lwd = 3)
dev.off()
##5
MaxAvgSteps <- arrange(Plot2_dat,steps)
tail(MaxAvgSteps$steps,1)
##6 Code to describe and show a strategy for imputing missing data
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(Plt_dat,2,pMiss)
aggr_plot <- aggr(Plt_dat, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(Plt_dat), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
random.imp <- function (a){
missing <- is.na(a)
n.missing <- sum(missing)
a.obs <- a[!missing]
imputed <- a
imputed[missing] <- sample (a.obs, n.missing, replace=TRUE)
return (imputed)
}
Pltsteps <-  data.frame(random.imp(Plt_dat$steps))
Plt_dat1 <- cbind(Plt_dat,Pltsteps)
names(Plt_dat1)[names(Plt_dat1)=="random.imp.Plt_dat.steps."] <- "StepsImputed"
##7 Histogram of the total number of steps taken each day after missing values are imputed
Plot_dat2 <- Plt_dat1 %>% group_by(date) %>% summarise_each(funs(sum), StepsImputed)
png(file = "plot3.png", width = 480, height = 480)
hist(Plot_dat2$StepsImputed, breaks=10, main = "Total Number of Steps Taken After Imputation", xlab = "Total Number of Steps Per Day", col = "lightblue", border = "black")
dev.off()
mean(Plot_dat2$StepsImputed, na.rm=TRUE)
median(Plot_dat2$StepsImputed, na.rm=TRUE)
##8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
Plt_dat1$interval <- factor(Plt_dat1$interval)
Plt_wd <- mutate(Plt_dat1, WeekTime=weekdays(date))
Plt_wd$WeekTime <- recode(Plt_wd$WeekTime, "c('Saturday', 'Sunday')='Weekend'; else='Weekday'")
Plt_wd$WeekTime <- factor(Plt_wd$WeekTime)
Plt_wday <- Plt_wd %>% group_by(interval, WeekTime) %>% summarise_each(funs(mean(., na.rm = TRUE)), StepsImputed)
p <- ggplot(Plt_wday, aes(x = interval, y = StepsImputed, group=WeekTime, colour=WeekTime)) + scale_x_discrete(name="Five Minute Interval", breaks=seq(0,3000,500)) + geom_point() + geom_line() + facet_wrap(WeekTime ~)
print(p)
library(plyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(knitr)
library(mice)
library(VIM)
library(car)
##1 Loading Datasets
setwd("C:/Users/Edwin/Documents/R/RRProjects")
fileurl <- "C:/Users/Edwin/Documents/R/RRProjects/activity.csv"
Plt_dat <- read.csv(fileurl, sep = ",", na.strings = "NA", colClasses=c('numeric','Date','numeric'))
Plot_dat <- Plt_dat %>% group_by(date) %>% summarise_each(funs(sum), steps)
##2 Histogram of the number of steps taken each day
png(file = "plot1.png", width = 480, height = 480)
hist(Plot_dat$steps, breaks=10, main = "Total Number of Steps Taken", xlab = "Total Number of Steps Per Day", col = "green")
dev.off()
##3 Mean and median number of steps taken each day
mean(Plot_dat$steps, na.rm=TRUE)
median(Plot_dat$steps, na.rm=TRUE)
##4 Time series plot of the average number of steps taken
Plt_dat$interval <- factor(Plt_dat$interval)
Plot2_dat <- Plt_dat %>% group_by(interval) %>% summarise_each(funs(mean(., na.rm = TRUE)), steps)
png(file = "Plot2.png", width = 480, height = 480)
par(mfrow = c(1,1))
with(Plot2_dat, plot(interval, steps, main = "Average Number of Steps Per Five Minute Interval for All Days", xlab ="5 - Minute Interval", ylab = "Averge Number of Steps", type = "l"))
lines(Plot2_dat$interval, Plot2_dat$steps,col="red", lwd = 3)
dev.off()
##5
MaxAvgSteps <- arrange(Plot2_dat,steps)
tail(MaxAvgSteps$steps,1)
##6 Code to describe and show a strategy for imputing missing data
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(Plt_dat,2,pMiss)
aggr_plot <- aggr(Plt_dat, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(Plt_dat), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
random.imp <- function (a){
missing <- is.na(a)
n.missing <- sum(missing)
a.obs <- a[!missing]
imputed <- a
imputed[missing] <- sample (a.obs, n.missing, replace=TRUE)
return (imputed)
}
Pltsteps <-  data.frame(random.imp(Plt_dat$steps))
Plt_dat1 <- cbind(Plt_dat,Pltsteps)
names(Plt_dat1)[names(Plt_dat1)=="random.imp.Plt_dat.steps."] <- "StepsImputed"
##7 Histogram of the total number of steps taken each day after missing values are imputed
Plot_dat2 <- Plt_dat1 %>% group_by(date) %>% summarise_each(funs(sum), StepsImputed)
png(file = "plot3.png", width = 480, height = 480)
hist(Plot_dat2$StepsImputed, breaks=10, main = "Total Number of Steps Taken After Imputation", xlab = "Total Number of Steps Per Day", col = "lightblue", border = "black")
dev.off()
mean(Plot_dat2$StepsImputed, na.rm=TRUE)
median(Plot_dat2$StepsImputed, na.rm=TRUE)
##8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
Plt_dat1$interval <- factor(Plt_dat1$interval)
Plt_wd <- mutate(Plt_dat1, WeekTime=weekdays(date))
Plt_wd$WeekTime <- recode(Plt_wd$WeekTime, "c('Saturday', 'Sunday')='Weekend'; else='Weekday'")
Plt_wd$WeekTime <- factor(Plt_wd$WeekTime)
Plt_wday <- Plt_wd %>% group_by(interval, WeekTime) %>% summarise_each(funs(mean(., na.rm = TRUE)), StepsImputed)
p <- ggplot(Plt_wday, aes(x = interval, y = StepsImputed, group=WeekTime, colour=WeekTime)) + scale_x_discrete(name="Five Minute Interval", breaks=seq(0,3000,500)) + geom_point() + geom_line() + facet_wrap(WeekTime ~, ncol=1)
print(p)
library(plyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(knitr)
library(mice)
library(VIM)
library(car)
##1 Loading Datasets
setwd("C:/Users/Edwin/Documents/R/RRProjects")
fileurl <- "C:/Users/Edwin/Documents/R/RRProjects/activity.csv"
Plt_dat <- read.csv(fileurl, sep = ",", na.strings = "NA", colClasses=c('numeric','Date','numeric'))
Plot_dat <- Plt_dat %>% group_by(date) %>% summarise_each(funs(sum), steps)
##2 Histogram of the number of steps taken each day
png(file = "plot1.png", width = 480, height = 480)
hist(Plot_dat$steps, breaks=10, main = "Total Number of Steps Taken", xlab = "Total Number of Steps Per Day", col = "green")
dev.off()
##3 Mean and median number of steps taken each day
mean(Plot_dat$steps, na.rm=TRUE)
median(Plot_dat$steps, na.rm=TRUE)
##4 Time series plot of the average number of steps taken
Plt_dat$interval <- factor(Plt_dat$interval)
Plot2_dat <- Plt_dat %>% group_by(interval) %>% summarise_each(funs(mean(., na.rm = TRUE)), steps)
png(file = "Plot2.png", width = 480, height = 480)
par(mfrow = c(1,1))
with(Plot2_dat, plot(interval, steps, main = "Average Number of Steps Per Five Minute Interval for All Days", xlab ="5 - Minute Interval", ylab = "Averge Number of Steps", type = "l"))
lines(Plot2_dat$interval, Plot2_dat$steps,col="red", lwd = 3)
dev.off()
##5
MaxAvgSteps <- arrange(Plot2_dat,steps)
tail(MaxAvgSteps$steps,1)
##6 Code to describe and show a strategy for imputing missing data
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(Plt_dat,2,pMiss)
aggr_plot <- aggr(Plt_dat, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(Plt_dat), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
random.imp <- function (a){
missing <- is.na(a)
n.missing <- sum(missing)
a.obs <- a[!missing]
imputed <- a
imputed[missing] <- sample (a.obs, n.missing, replace=TRUE)
return (imputed)
}
Pltsteps <-  data.frame(random.imp(Plt_dat$steps))
Plt_dat1 <- cbind(Plt_dat,Pltsteps)
names(Plt_dat1)[names(Plt_dat1)=="random.imp.Plt_dat.steps."] <- "StepsImputed"
##7 Histogram of the total number of steps taken each day after missing values are imputed
Plot_dat2 <- Plt_dat1 %>% group_by(date) %>% summarise_each(funs(sum), StepsImputed)
png(file = "plot3.png", width = 480, height = 480)
hist(Plot_dat2$StepsImputed, breaks=10, main = "Total Number of Steps Taken After Imputation", xlab = "Total Number of Steps Per Day", col = "lightblue", border = "black")
dev.off()
mean(Plot_dat2$StepsImputed, na.rm=TRUE)
median(Plot_dat2$StepsImputed, na.rm=TRUE)
##8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
Plt_dat1$interval <- factor(Plt_dat1$interval)
Plt_wd <- mutate(Plt_dat1, WeekTime=weekdays(date))
Plt_wd$WeekTime <- recode(Plt_wd$WeekTime, "c('Saturday', 'Sunday')='Weekend'; else='Weekday'")
Plt_wd$WeekTime <- factor(Plt_wd$WeekTime)
Plt_wday <- Plt_wd %>% group_by(interval, WeekTime) %>% summarise_each(funs(mean(., na.rm = TRUE)), StepsImputed)
p <- ggplot(Plt_wday, aes(x = interval, y = StepsImputed, group=WeekTime, colour=WeekTime)) + scale_x_discrete(name="Five Minute Interval", breaks=seq(0,3000,500)) + geom_point() + geom_line() + facet_wrap(~ WeekTime, ncol = 1)
print(p)
library(plyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(knitr)
library(mice)
library(VIM)
library(car)
##1 Loading Datasets
setwd("C:/Users/Edwin/Documents/R/RRProjects")
fileurl <- "C:/Users/Edwin/Documents/R/RRProjects/activity.csv"
Plt_dat <- read.csv(fileurl, sep = ",", na.strings = "NA", colClasses=c('numeric','Date','numeric'))
Plot_dat <- Plt_dat %>% group_by(date) %>% summarise_each(funs(sum), steps)
##2 Histogram of the number of steps taken each day
png(file = "plot1.png", width = 480, height = 480)
hist(Plot_dat$steps, breaks=10, main = "Total Number of Steps Taken", xlab = "Total Number of Steps Per Day", col = "green")
dev.off()
##3 Mean and median number of steps taken each day
mean(Plot_dat$steps, na.rm=TRUE)
median(Plot_dat$steps, na.rm=TRUE)
##4 Time series plot of the average number of steps taken
Plt_dat$interval <- factor(Plt_dat$interval)
Plot2_dat <- Plt_dat %>% group_by(interval) %>% summarise_each(funs(mean(., na.rm = TRUE)), steps)
png(file = "Plot2.png", width = 480, height = 480)
par(mfrow = c(1,1))
with(Plot2_dat, plot(interval, steps, main = "Average Number of Steps Per Five Minute Interval for All Days", xlab ="5 - Minute Interval", ylab = "Averge Number of Steps", type = "l"))
lines(Plot2_dat$interval, Plot2_dat$steps,col="red", lwd = 3)
dev.off()
##5
MaxAvgSteps <- arrange(Plot2_dat,steps)
tail(MaxAvgSteps$steps,1)
##6 Code to describe and show a strategy for imputing missing data
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(Plt_dat,2,pMiss)
aggr_plot <- aggr(Plt_dat, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(Plt_dat), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
random.imp <- function (a){
missing <- is.na(a)
n.missing <- sum(missing)
a.obs <- a[!missing]
imputed <- a
imputed[missing] <- sample (a.obs, n.missing, replace=TRUE)
return (imputed)
}
Pltsteps <-  data.frame(random.imp(Plt_dat$steps))
Plt_dat1 <- cbind(Plt_dat,Pltsteps)
names(Plt_dat1)[names(Plt_dat1)=="random.imp.Plt_dat.steps."] <- "StepsImputed"
##7 Histogram of the total number of steps taken each day after missing values are imputed
Plot_dat2 <- Plt_dat1 %>% group_by(date) %>% summarise_each(funs(sum), StepsImputed)
png(file = "plot3.png", width = 480, height = 480)
hist(Plot_dat2$StepsImputed, breaks=10, main = "Total Number of Steps Taken After Imputation", xlab = "Total Number of Steps Per Day", col = "lightblue", border = "black")
dev.off()
mean(Plot_dat2$StepsImputed, na.rm=TRUE)
median(Plot_dat2$StepsImputed, na.rm=TRUE)
##8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
Plt_dat1$interval <- factor(Plt_dat1$interval)
Plt_wd <- mutate(Plt_dat1, WeekTime=weekdays(date))
Plt_wd$WeekTime <- recode(Plt_wd$WeekTime, "c('Saturday', 'Sunday')='Weekend'; else='Weekday'")
Plt_wd$WeekTime <- factor(Plt_wd$WeekTime)
Plt_wday <- Plt_wd %>% group_by(interval, WeekTime) %>% summarise_each(funs(mean(., na.rm = TRUE)), StepsImputed)
p <- ggplot(Plt_wday, aes(x = interval, y = StepsImputed, group=WeekTime, colour=WeekTime)) + scale_x_discrete(name="Five Minute Interval", breaks=seq(0,3000,250)) + geom_point() + geom_line() + facet_wrap(~ WeekTime, ncol = 1)
print(p)
library(plyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(knitr)
library(mice)
library(VIM)
library(car)
##1 Loading Datasets
setwd("C:/Users/Edwin/Documents/R/RRProjects")
fileurl <- "C:/Users/Edwin/Documents/R/RRProjects/activity.csv"
Plt_dat <- read.csv(fileurl, sep = ",", na.strings = "NA", colClasses=c('numeric','Date','numeric'))
Plot_dat <- Plt_dat %>% group_by(date) %>% summarise_each(funs(sum), steps)
##2 Histogram of the number of steps taken each day
png(file = "plot1.png", width = 480, height = 480)
hist(Plot_dat$steps, breaks=10, main = "Total Number of Steps Taken", xlab = "Total Number of Steps Per Day", col = "green")
dev.off()
##3 Mean and median number of steps taken each day
mean(Plot_dat$steps, na.rm=TRUE)
median(Plot_dat$steps, na.rm=TRUE)
##4 Time series plot of the average number of steps taken
Plt_dat$interval <- factor(Plt_dat$interval)
Plot2_dat <- Plt_dat %>% group_by(interval) %>% summarise_each(funs(mean(., na.rm = TRUE)), steps)
png(file = "Plot2.png", width = 480, height = 480)
par(mfrow = c(1,1))
with(Plot2_dat, plot(interval, steps, main = "Average Number of Steps Per Five Minute Interval for All Days", xlab ="5 - Minute Interval", ylab = "Averge Number of Steps", type = "l"))
lines(Plot2_dat$interval, Plot2_dat$steps,col="red", lwd = 3)
dev.off()
##5
MaxAvgSteps <- arrange(Plot2_dat,steps)
tail(MaxAvgSteps$steps,1)
##6 Code to describe and show a strategy for imputing missing data
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(Plt_dat,2,pMiss)
aggr_plot <- aggr(Plt_dat, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(Plt_dat), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
random.imp <- function (a){
missing <- is.na(a)
n.missing <- sum(missing)
a.obs <- a[!missing]
imputed <- a
imputed[missing] <- sample (a.obs, n.missing, replace=TRUE)
return (imputed)
}
Pltsteps <-  data.frame(random.imp(Plt_dat$steps))
Plt_dat1 <- cbind(Plt_dat,Pltsteps)
names(Plt_dat1)[names(Plt_dat1)=="random.imp.Plt_dat.steps."] <- "StepsImputed"
##7 Histogram of the total number of steps taken each day after missing values are imputed
Plot_dat2 <- Plt_dat1 %>% group_by(date) %>% summarise_each(funs(sum), StepsImputed)
png(file = "plot3.png", width = 480, height = 480)
hist(Plot_dat2$StepsImputed, breaks=10, main = "Total Number of Steps Taken After Imputation", xlab = "Total Number of Steps Per Day", col = "lightblue", border = "black")
dev.off()
mean(Plot_dat2$StepsImputed, na.rm=TRUE)
median(Plot_dat2$StepsImputed, na.rm=TRUE)
##8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
Plt_dat1$interval <- factor(Plt_dat1$interval)
Plt_wd <- mutate(Plt_dat1, WeekTime=weekdays(date))
Plt_wd$WeekTime <- recode(Plt_wd$WeekTime, "c('Saturday', 'Sunday')='Weekend'; else='Weekday'")
Plt_wd$WeekTime <- factor(Plt_wd$WeekTime)
Plt_wday <- Plt_wd %>% group_by(interval, WeekTime) %>% summarise_each(funs(mean(., na.rm = TRUE)), StepsImputed)
p <- ggplot(Plt_wday, aes(x = interval, y = StepsImputed, group=WeekTime, colour=WeekTime)) + scale_x_discrete(name="Five Minute Interval", breaks=seq(0,3000,250)) + geom_line() + facet_wrap(~ WeekTime, ncol = 1)
print(p)
library(plyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(knitr)
library(mice)
library(VIM)
library(car)
##1 Loading Datasets
setwd("C:/Users/Edwin/Documents/R/RRProjects")
fileurl <- "C:/Users/Edwin/Documents/R/RRProjects/activity.csv"
Plt_dat <- read.csv(fileurl, sep = ",", na.strings = "NA", colClasses=c('numeric','Date','numeric'))
Plot_dat <- Plt_dat %>% group_by(date) %>% summarise_each(funs(sum), steps)
##2 Histogram of the number of steps taken each day
png(file = "plot1.png", width = 480, height = 480)
hist(Plot_dat$steps, breaks=10, main = "Total Number of Steps Taken", xlab = "Total Number of Steps Per Day", col = "green")
dev.off()
##3 Mean and median number of steps taken each day
mean(Plot_dat$steps, na.rm=TRUE)
median(Plot_dat$steps, na.rm=TRUE)
##4 Time series plot of the average number of steps taken
Plt_dat$interval <- factor(Plt_dat$interval)
Plot2_dat <- Plt_dat %>% group_by(interval) %>% summarise_each(funs(mean(., na.rm = TRUE)), steps)
png(file = "Plot2.png", width = 480, height = 480)
par(mfrow = c(1,1))
with(Plot2_dat, plot(interval, steps, main = "Average Number of Steps Per Five Minute Interval for All Days", xlab ="5 - Minute Interval", ylab = "Averge Number of Steps", type = "l"))
lines(Plot2_dat$interval, Plot2_dat$steps,col="red", lwd = 3)
dev.off()
##5
MaxAvgSteps <- arrange(Plot2_dat,steps)
tail(MaxAvgSteps$steps,1)
##6 Code to describe and show a strategy for imputing missing data
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(Plt_dat,2,pMiss)
aggr_plot <- aggr(Plt_dat, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(Plt_dat), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
random.imp <- function (a){
missing <- is.na(a)
n.missing <- sum(missing)
a.obs <- a[!missing]
imputed <- a
imputed[missing] <- sample (a.obs, n.missing, replace=TRUE)
return (imputed)
}
Pltsteps <-  data.frame(random.imp(Plt_dat$steps))
Plt_dat1 <- cbind(Plt_dat,Pltsteps)
names(Plt_dat1)[names(Plt_dat1)=="random.imp.Plt_dat.steps."] <- "StepsImputed"
##7 Histogram of the total number of steps taken each day after missing values are imputed
Plot_dat2 <- Plt_dat1 %>% group_by(date) %>% summarise_each(funs(sum), StepsImputed)
png(file = "plot3.png", width = 480, height = 480)
hist(Plot_dat2$StepsImputed, breaks=10, main = "Total Number of Steps Taken After Imputation", xlab = "Total Number of Steps Per Day", col = "lightblue", border = "black")
dev.off()
mean(Plot_dat2$StepsImputed, na.rm=TRUE)
median(Plot_dat2$StepsImputed, na.rm=TRUE)
##8 Panel plot comparing the average number of steps taken per 5-minute interval across weekdays and weekends
Plt_dat1$interval <- factor(Plt_dat1$interval)
Plt_wd <- mutate(Plt_dat1, WeekTime=weekdays(date))
Plt_wd$WeekTime <- recode(Plt_wd$WeekTime, "c('Saturday', 'Sunday')='Weekend'; else='Weekday'")
Plt_wd$WeekTime <- factor(Plt_wd$WeekTime)
Plt_wday <- Plt_wd %>% group_by(interval, WeekTime) %>% summarise_each(funs(mean(., na.rm = TRUE)), StepsImputed)
p <- ggplot(Plt_wday, aes(x = interval, y = StepsImputed, group=WeekTime, colour=WeekTime)) + scale_x_discrete(name="Five Minute Interval", breaks=seq(0,3000,250)) + geom_line() + facet_wrap(~ WeekTime, ncol = 1)
ggsave("Plot4.png", width = 8, height = 4.5, dpi = 120)
---
## title: "Reproducible Research Progam Assignment 1"
### author: "Edwin St Catherine"
date: "January 10, 2016"
output: html_document
---
This is an R Markdown document. This document explains the steps which I took in completing this course assignment.
##1 Loading Datasets
*The following code loads the required library files used and the data and does some proccessing of the data required to produce this first graph*
```{r}
library(plyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(knitr)
library(mice)
library(VIM)
library(car)
setwd("C:/Users/Edwin/Documents/R/RRProjects")
fileurl <- "C:/Users/Edwin/Documents/R/RRProjects/activity.csv"
Plt_dat <- read.csv(fileurl, sep = ",", na.strings = "NA", colClasses=c('numeric','Date','numeric'))
Plot_dat <- Plt_dat %>% group_by(date) %>% summarise_each(funs(sum), steps)
```
##2 Histogram of the number of steps taken each day
```{r, echo=TRUE}
png(file = "plot1.png", width = 480, height = 480)
hist(Plot_dat$steps, breaks=10, main = "Total Number of Steps Taken", xlab = "Total Number of Steps Per Day", col = "green")
dev.off()
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
*First we create the weekday variable then we use the car package to recode it to two categories weekday and weekend then we plot it*
